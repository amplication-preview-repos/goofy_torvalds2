/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BidCreateNestedManyWithoutAuctionsInput } from "./BidCreateNestedManyWithoutAuctionsInput";
import {
  ValidateNested,
  IsOptional,
  IsNumber,
  IsDate,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { CarWhereUniqueInput } from "../../car/base/CarWhereUniqueInput";
import { TransactionCreateNestedManyWithoutAuctionsInput } from "./TransactionCreateNestedManyWithoutAuctionsInput";

@InputType()
class AuctionCreateInput {
  @ApiProperty({
    required: false,
    type: () => BidCreateNestedManyWithoutAuctionsInput,
  })
  @ValidateNested()
  @Type(() => BidCreateNestedManyWithoutAuctionsInput)
  @IsOptional()
  @Field(() => BidCreateNestedManyWithoutAuctionsInput, {
    nullable: true,
  })
  bids?: BidCreateNestedManyWithoutAuctionsInput;

  @ApiProperty({
    required: false,
    type: () => CarWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CarWhereUniqueInput)
  @IsOptional()
  @Field(() => CarWhereUniqueInput, {
    nullable: true,
  })
  car?: CarWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  currentBid?: number | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endTime?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  highestBidder?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  highestBidderUser?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  startTime?: Date | null;

  @ApiProperty({
    required: false,
    type: () => TransactionCreateNestedManyWithoutAuctionsInput,
  })
  @ValidateNested()
  @Type(() => TransactionCreateNestedManyWithoutAuctionsInput)
  @IsOptional()
  @Field(() => TransactionCreateNestedManyWithoutAuctionsInput, {
    nullable: true,
  })
  transactions?: TransactionCreateNestedManyWithoutAuctionsInput;
}

export { AuctionCreateInput as AuctionCreateInput };
